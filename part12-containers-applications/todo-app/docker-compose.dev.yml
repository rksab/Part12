services:
  app:
    image: front
    build:
      context: ./todo-frontend # The context will pick this directory as the "build context"
      dockerfile: dev.Dockerfile # This will simply tell which dockerfile to read
    volumes:
      - ./todo-frontend/:/usr/src/app # The path can be relative, so ./ is enough to say "the same location as the docker-compose.yml"
    ports:
      - 5173:5173
    container_name: front # This will name the container hello-front-dev
    environment:
      - VITE_BACKEND_URL=http://localhost:8080/api

  debug-helper:
    image: busybox
    command: sh -c "sleep 10000"
    
  backend:
    image: back
    build:
      context: ./todo-backend # The context will pick this directory as the "build context"
      dockerfile: dev.Dockerfile # This will simply tell which dockerfile to read
    volumes:
      - ./todo-backend/:/usr/src/app # The path can be relative, so ./ is enough to say "the same location as the docker-compose.yml"
    container_name: back # This will name the container hello-front-dev
    ports: 
       - 3000:3000
    depends_on:
      - mongo
      - redis
    environment:
      MONGO_URL: mongodb://the_username:the_password@mongo:27017/the_database
      REDIS_URL: redis://redis:6379
   
  nginx:
    image: nginx:1.20.1
    volumes:
      - ./nginx.dev.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 8080:80
    container_name: reverse-proxy1
    depends_on:
      - app 
      - backend

  mongo:
    image: mongo
    ports:
      - 3456:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: the_database
    volumes: 
      - ./todo-backend/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js

  redis: 
    image: redis
    ports: 
       - 6379:6379
    command: ['redis-server', '--appendonly', 'yes']
    volumes: 
         - ./todo-backend/redis_data/:/data
volumes:
  redis_data:
  